{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gary\\\\Documents\\\\Git\\\\KiasuGrocer\\\\kiasu_grocer\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Hero from \"../components/Hero\";\nimport ItemView from \"../components/ItemView\";\nimport { listOfItems } from \"../data/item_list\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setItems } from \"../AppState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const appState = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [vendorDetails, setVendorDetails] = useState(null);\n  const navigate = useNavigate();\n  const [itemList, setItemList] = useState(listOfItems);\n  const goToAuthCustomer = async () => await navigate('/authcustomer');\n\n  /**\r\n   * Haversine function to calculate dist between 2 places\r\n   * @param lat1 user latitude\r\n   * @param lon1 user longitude\r\n   * @param lat2 destination latitude\r\n   * @param lon2 destination longitude\r\n   * @returns distance between the 2 coordinates\r\n   */\n  const calcDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371;\n    var degLat = degToRad(lat2 - lat1);\n    var degLon = degToRad(lon2 - lon1);\n    var a = Math.sin(degLat / 2) * Math.sin(degLat / 2) + Math.cos(degToRad(lat1)) * Math.cos(degToRad(lat2)) * Math.sin(degLon / 2) * Math.sin(degLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  };\n\n  /**\r\n   * Function to convert degree to radian\r\n   * @param deg angle in degrees \r\n   * @returns angle in radian\r\n   */\n  function degToRad(deg) {\n    return deg * (Math.PI / 180);\n  }\n\n  /**\r\n   * First API call that requests addresses of all supermarkets in SG (Limit to 5 because I'm not rich)\r\n   * Second API call translates the address into latitude and longitude coordinates\r\n   * Get your own API key from here and test it yourself : https://positionstack.com/\r\n   * @returns A promise object that encapsulates an array of arrays with {address, latitude, longitude, market name}\r\n   */\n  const RESTresponse = () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    let markets = fetch(\"http://data.gov.sg/api/action/datastore_search?resource_id=df586152-d00f-4b15-b667-9e268f1b60df&limit=5\", requestOptions).then(response => response.json()).then(result => result.result.records).then(x => {\n      return x.map(element => {\n        return fetch(\"http://api.positionstack.com/v1/forward?access_key=77dd088611e15e988f32434bfe65a3db&query=\" + element.premise_address, requestOptions).then(response => response.json()).then(result => [result.data[0].name, result.data[0].latitude, result.data[0].longitude, element.business_name]);\n      });\n    });\n    return markets;\n  };\n\n  /**\r\n   * Gets user location and manipulate the monad from above API call to produce an array with needed data\r\n   * @returns an array encapsulating {address, distance, market name}\r\n   */\n  const fetchData = () => {\n    const handleGeolocationSuccess = position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      return RESTresponse().then(element => element.map(promise => promise.then(x => [x[0], calcDistance(latitude, longitude, x[1], x[2]), x[3]]))).catch(x => []).then(fList => {\n        console.log(fList);\n        return Promise.all(fList).then(x => x.map(promise => promise).filter(x => x[1] < 100));\n      }).then(x => setVendorDetails(x));\n    };\n    const handleGeolocationError = error => {\n      console.log(\"Geolocation error:\", error);\n      return [];\n    };\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(handleGeolocationSuccess, handleGeolocationError);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      return [];\n    }\n  };\n\n  /**\r\n   * effect hook that gets called upon rendering of the webpage\r\n   */\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      fetchData();\n      rendered = true;\n    }\n  }, []);\n\n  /**\r\n   * effect hook that gets caled whenever the market or vendor details are updated\r\n   */\n  useEffect(() => {\n    if (vendorDetails != null) {\n      const newList = itemList.map((values, index) => {\n        const newValue = vendorDetails[index][0].toString() + \" \" + vendorDetails[index][2].toString() + \" (\" + vendorDetails[index][1].toFixed(2).toString() + \"km away)\";\n        return {\n          ...itemList[index],\n          vendor: newValue\n        };\n      });\n      console.log(newList);\n      dispatch(setItems(newList));\n      setItemList(newList);\n    }\n  }, [vendorDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), itemList.map((values, index) => {\n      return /*#__PURE__*/_jsxDEV(ItemView, {\n        data: values,\n        handleClick: goToAuthCustomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n};\n_s(Dashboard, \"ke0+69LXxRc94Ehx5Ydyrl2zpZE=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Hero","ItemView","listOfItems","useNavigate","useSelector","useDispatch","setItems","jsxDEV","_jsxDEV","Dashboard","_s","appState","state","dispatch","vendorDetails","setVendorDetails","navigate","itemList","setItemList","goToAuthCustomer","calcDistance","lat1","lon1","lat2","lon2","R","degLat","degToRad","degLon","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI","RESTresponse","requestOptions","method","redirect","markets","fetch","then","response","json","result","records","x","map","element","premise_address","data","name","latitude","longitude","business_name","fetchData","handleGeolocationSuccess","position","coords","promise","catch","fList","console","log","Promise","all","filter","handleGeolocationError","error","navigator","geolocation","getCurrentPosition","rendered","newList","values","index","newValue","toString","toFixed","vendor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Gary/Documents/Git/KiasuGrocer/kiasu_grocer/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Hero from \"../components/Hero\";\r\nimport ItemView from \"../components/ItemView\";\r\nimport { listOfItems } from \"../data/item_list\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setItems } from \"../AppState\";\r\n\r\n\r\nconst Dashboard = () => {\r\n    const appState = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const [vendorDetails, setVendorDetails] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [itemList, setItemList] = useState(listOfItems);\r\n    const goToAuthCustomer = async () => await navigate('/authcustomer');\r\n\r\n\r\n    /**\r\n     * Haversine function to calculate dist between 2 places\r\n     * @param lat1 user latitude\r\n     * @param lon1 user longitude\r\n     * @param lat2 destination latitude\r\n     * @param lon2 destination longitude\r\n     * @returns distance between the 2 coordinates\r\n     */\r\n    const calcDistance = (lat1, lon1, lat2, lon2) => {\r\n        var R = 6371; \r\n        var degLat = degToRad(lat2 - lat1);\r\n        var degLon = degToRad(lon2 - lon1);\r\n        var a = Math.sin(degLat / 2) * Math.sin(degLat / 2) +\r\n            Math.cos(degToRad(lat1)) * Math.cos(degToRad(lat2)) *\r\n            Math.sin(degLon / 2) * Math.sin(degLon / 2);\r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n        var d = R * c;\r\n        return d;\r\n    }\r\n\r\n    /**\r\n     * Function to convert degree to radian\r\n     * @param deg angle in degrees \r\n     * @returns angle in radian\r\n     */\r\n    function degToRad(deg) {\r\n        return deg * (Math.PI / 180)\r\n    }\r\n\r\n    /**\r\n     * First API call that requests addresses of all supermarkets in SG (Limit to 5 because I'm not rich)\r\n     * Second API call translates the address into latitude and longitude coordinates\r\n     * Get your own API key from here and test it yourself : https://positionstack.com/\r\n     * @returns A promise object that encapsulates an array of arrays with {address, latitude, longitude, market name}\r\n     */\r\n    const RESTresponse = () => {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n        };\r\n\r\n        let markets = fetch(\"http://data.gov.sg/api/action/datastore_search?resource_id=df586152-d00f-4b15-b667-9e268f1b60df&limit=5\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => result.result.records)\r\n            .then(x => {\r\n                return x.map(element => {\r\n                    return fetch(\"http://api.positionstack.com/v1/forward?access_key=77dd088611e15e988f32434bfe65a3db&query=\" + element.premise_address, requestOptions)\r\n                        .then(response => response.json())\r\n                        .then(result => [result.data[0].name, result.data[0].latitude, result.data[0].longitude, element.business_name])\r\n                });\r\n            });\r\n        return markets;\r\n    }\r\n\r\n    /**\r\n     * Gets user location and manipulate the monad from above API call to produce an array with needed data\r\n     * @returns an array encapsulating {address, distance, market name}\r\n     */\r\n    const fetchData = () => {\r\n        const handleGeolocationSuccess = (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            return RESTresponse().then(element => \r\n                    element.map(promise => promise.then(x => [x[0], calcDistance(latitude, longitude, x[1], x[2]), x[3]])))\r\n                .catch(x => [])\r\n                .then(fList => {\r\n                    console.log(fList);\r\n                    return Promise.all(fList).then(x => x.map(promise => promise)\r\n                        .filter(x => x[1] < 100));\r\n                })\r\n                .then(x => setVendorDetails(x));\r\n        };\r\n        const handleGeolocationError = (error) => {\r\n           console.log(\"Geolocation error:\", error);\r\n           return [];\r\n        };\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n              handleGeolocationSuccess,\r\n              handleGeolocationError\r\n            );\r\n        } else {\r\n            console.log(\"Geolocation is not supported by this browser.\");\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * effect hook that gets called upon rendering of the webpage\r\n     */\r\n    let rendered = false;\r\n    useEffect(() => {\r\n        if(!rendered) {\r\n            fetchData();\r\n            rendered = true;\r\n        }\r\n    },[]);\r\n\r\n    /**\r\n     * effect hook that gets caled whenever the market or vendor details are updated\r\n     */\r\n    useEffect(() => {\r\n        if(vendorDetails != null) {\r\n            const newList = itemList.map((values,index) => {\r\n                const newValue = vendorDetails[index][0].toString() + \" \" + \r\n                    vendorDetails[index][2].toString() + \" (\" + \r\n                    vendorDetails[index][1].toFixed(2).toString() + \"km away)\";\r\n                return {...itemList[index], vendor:newValue};\r\n            })\r\n            console.log(newList);\r\n            dispatch(setItems(newList));\r\n            setItemList(newList);\r\n        }\r\n    }, [vendorDetails])\r\n\r\n    return <div className=\"\">\r\n        <Navbar />\r\n        <Hero />\r\n        {itemList.map((values, index) => {\r\n            return <ItemView data={values} handleClick={goToAuthCustomer} />\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAAC;EAC5C,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMkB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAACI,WAAW,CAAC;EACrD,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY,MAAMH,QAAQ,CAAC,eAAe,CAAC;;EAGpE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMI,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC7C,IAAIC,CAAC,GAAG,IAAI;IACZ,IAAIC,MAAM,GAAGC,QAAQ,CAACJ,IAAI,GAAGF,IAAI,CAAC;IAClC,IAAIO,MAAM,GAAGD,QAAQ,CAACH,IAAI,GAAGF,IAAI,CAAC;IAClC,IAAIO,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC,GAC/CI,IAAI,CAACE,GAAG,CAACL,QAAQ,CAACN,IAAI,CAAC,CAAC,GAAGS,IAAI,CAACE,GAAG,CAACL,QAAQ,CAACJ,IAAI,CAAC,CAAC,GACnDO,IAAI,CAACC,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC;IAC/C,IAAIK,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAAC,EAAEC,IAAI,CAACK,IAAI,CAAC,CAAC,GAAGN,CAAC,CAAC,CAAC;IACtD,IAAIO,CAAC,GAAGX,CAAC,GAAGQ,CAAC;IACb,OAAOG,CAAC;EACZ,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,SAAST,QAAQA,CAACU,GAAG,EAAE;IACnB,OAAOA,GAAG,IAAIP,IAAI,CAACQ,EAAE,GAAG,GAAG,CAAC;EAChC;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,cAAc,GAAG;MACjBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE;IACd,CAAC;IAED,IAAIC,OAAO,GAAGC,KAAK,CAAC,yGAAyG,EAAEJ,cAAc,CAAC,CACzIK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIA,MAAM,CAACA,MAAM,CAACC,OAAO,CAAC,CACrCJ,IAAI,CAACK,CAAC,IAAI;MACP,OAAOA,CAAC,CAACC,GAAG,CAACC,OAAO,IAAI;QACpB,OAAOR,KAAK,CAAC,4FAA4F,GAAGQ,OAAO,CAACC,eAAe,EAAEb,cAAc,CAAC,CAC/IK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAI,CAACA,MAAM,CAACM,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEP,MAAM,CAACM,IAAI,CAAC,CAAC,CAAC,CAACE,QAAQ,EAAER,MAAM,CAACM,IAAI,CAAC,CAAC,CAAC,CAACG,SAAS,EAAEL,OAAO,CAACM,aAAa,CAAC,CAAC;MACxH,CAAC,CAAC;IACN,CAAC,CAAC;IACN,OAAOf,OAAO;EAClB,CAAC;;EAED;AACJ;AACA;AACA;EACI,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACpB,MAAMC,wBAAwB,GAAIC,QAAQ,IAAK;MAC3C,MAAM;QAAEL,QAAQ;QAAEC;MAAU,CAAC,GAAGI,QAAQ,CAACC,MAAM;MAC/C,OAAOvB,YAAY,CAAC,CAAC,CAACM,IAAI,CAACO,OAAO,IAC1BA,OAAO,CAACD,GAAG,CAACY,OAAO,IAAIA,OAAO,CAAClB,IAAI,CAACK,CAAC,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,EAAE9B,YAAY,CAACoC,QAAQ,EAAEC,SAAS,EAAEP,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1Gc,KAAK,CAACd,CAAC,IAAI,EAAE,CAAC,CACdL,IAAI,CAACoB,KAAK,IAAI;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,OAAOG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CAACpB,IAAI,CAACK,CAAC,IAAIA,CAAC,CAACC,GAAG,CAACY,OAAO,IAAIA,OAAO,CAAC,CACxDO,MAAM,CAACpB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MACjC,CAAC,CAAC,CACDL,IAAI,CAACK,CAAC,IAAInC,gBAAgB,CAACmC,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,MAAMqB,sBAAsB,GAAIC,KAAK,IAAK;MACvCN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,KAAK,CAAC;MACxC,OAAO,EAAE;IACZ,CAAC;IAED,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtCf,wBAAwB,EACxBW,sBACF,CAAC;IACL,CAAC,MAAM;MACHL,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC5D,OAAO,EAAE;IACb;EACJ,CAAC;;EAED;AACJ;AACA;EACI,IAAIS,QAAQ,GAAG,KAAK;EACpB/E,SAAS,CAAC,MAAM;IACZ,IAAG,CAAC+E,QAAQ,EAAE;MACVjB,SAAS,CAAC,CAAC;MACXiB,QAAQ,GAAG,IAAI;IACnB;EACJ,CAAC,EAAC,EAAE,CAAC;;EAEL;AACJ;AACA;EACI/E,SAAS,CAAC,MAAM;IACZ,IAAGiB,aAAa,IAAI,IAAI,EAAE;MACtB,MAAM+D,OAAO,GAAG5D,QAAQ,CAACkC,GAAG,CAAC,CAAC2B,MAAM,EAACC,KAAK,KAAK;QAC3C,MAAMC,QAAQ,GAAGlE,aAAa,CAACiE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAG,GAAG,GACrDnE,aAAa,CAACiE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAG,IAAI,GACzCnE,aAAa,CAACiE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,GAAG,UAAU;QAC9D,OAAO;UAAC,GAAGhE,QAAQ,CAAC8D,KAAK,CAAC;UAAEI,MAAM,EAACH;QAAQ,CAAC;MAChD,CAAC,CAAC;MACFd,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;MACpBhE,QAAQ,CAACP,QAAQ,CAACuE,OAAO,CAAC,CAAC;MAC3B3D,WAAW,CAAC2D,OAAO,CAAC;IACxB;EACJ,CAAC,EAAE,CAAC/D,aAAa,CAAC,CAAC;EAEnB,oBAAON,OAAA;IAAK4E,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACpB7E,OAAA,CAACT,MAAM;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjF,OAAA,CAACR,IAAI;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACPxE,QAAQ,CAACkC,GAAG,CAAC,CAAC2B,MAAM,EAAEC,KAAK,KAAK;MAC7B,oBAAOvE,OAAA,CAACP,QAAQ;QAACqD,IAAI,EAAEwB,MAAO;QAACY,WAAW,EAAEvE;MAAiB;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpE,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAAA/E,EAAA,CAnIKD,SAAS;EAAA,QACML,WAAW,EACXC,WAAW,EAEXF,WAAW;AAAA;AAAAwF,EAAA,GAJ1BlF,SAAS;AAqIf,eAAeA,SAAS;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}